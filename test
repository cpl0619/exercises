#include <iostream>

void resetboard(char array[9]){
    for(int i = 0; i <= 9; i++){
        array[i] = '-';
    }
}

void charboardout(char array[9]){
     for(int i = 0; i < 3; i++){
         std::cout << array[i];
     }
     std::cout << std::endl;
        for(int i = 3; i < 6; i++){
         std::cout << array[i];
     }
      std::cout << std::endl;
            for(int i = 6; i < 9; i++){
         std::cout << array[i];
     }
     std::cout << std::endl;
}

void intboardout(int array[9]){
     for(int i = 0; i < 3; i++){
         std::cout << array[i];
     }
     std::cout << std::endl;
        for(int i = 3; i < 6; i++){
         std::cout << array[i];
     }
      std::cout << std::endl;
            for(int i = 6; i < 9; i++){
         std::cout << array[i];
     }
     std::cout << std::endl;
}

void choiceboardout(){
    int array[9];
    for(int i = 0; i < 9; i++){
        array[i] = i;
    }
    intboardout(array);
}

int choicep1(){
    int choicep1;
    std::cout << "Player 1: what slot would you like to put an X" << std::endl;
    std::cin>> choicep1;
    std::cout << std::endl;
    if(choicep1 < 0 || choicep1 > 9){
        std::cout << "invalid" << std::endl;
        return 0;
    } else {
        return choicep1;
    }
}

int choicep2(){
    int choicep2;
    std::cout << "Player 2: what slot would you like to put an O" << std::endl;
    std::cin>> choicep2;
    std::cout << std::endl;
    if(choicep2 < 0 || choicep2 > 9){
        std::cout << "invalid" << std::endl;
        return 0;
    } else {
        return choicep2;
    }
}

int fillcheck(){
    //checks if whole board is filled to determine if tied
}

int wincheckp1(char array[9]){
    if(array[0] == 'X' && array[1] == 'X' && array[2] == 'X'){
        return 1;
    }
        if(array[3] =='X' && array[4] == 'X' && array[5] == 'X'){
        return 1;
        }
            if(array[6] == 'X' && array[7] == 'X' && array[8] == 'X'){
            return 1;
            }
                if(array[0] == 'X' && array[3] == 'X' && array[6] == 'X'){
                return 1;
                }
                    if(array[1] == 'X' && array[4] == 'X' && array[7] == 'X'){
                    return 1;
                    }
                        if(array[2] == 'X' && array[5] == 'X' && array[8] == 'X'){
                        return 1;
                        }
                            if(array[0] == 'X' && array[4] == 'X' && array[8] == 'X'){
                            return 1;
                            }
                                if(array[2] == 'X' && array[4] == 'X' && array[6] == 'X'){
                                return 1;
                                }
                                return 0;
}

int wincheckp2(char array[9]){
    if(array[0] == 'O' && array[1] == 'O' && array[2] == 'O'){
        return 1;
    }
        if(array[3] == 'O' && array[4] == 'O' && array[5] == 'O'){
        return 1;
        }
            if(array[6] == 'O' && array[7] == 'O' && array[8] == 'O'){
            return 1;
            }
                if(array[0] == 'O' && array[3] == 'O' && array[6] == 'O'){
                return 1;
                }
                    if(array[1] == 'O' && array[4] == 'O' && array[7] == 'O'){
                    return 1;
                    }
                        if(array[2] == 'O' && array[5] == 'O' && array[8] == 'O'){
                        return 1;
                        }
                            if(array[0] == 'O' && array[4] == 'O' && array[8] == 'O'){
                            return 1;
                            }
                                if(array[2] == 'O' && array[4] == 'O' && array[6] == 'O'){
                                return 1;
                                }
                                return 0;
}

void playtictactoe(){
    char board[9];
    int choicelocal1;
    int choicelocal2;
    resetboard(board);
    
        while(true){
            charboardout(board);
            std::cout << std::endl;
            choiceboardout();
            std::cout << std::endl;
            choicelocal1 = choicep1();
            if(board[choicelocal1] == 'X' || board[choicelocal1] == 'O'){
                std::cout << "invalid" << std::endl;
            } else {
                board[choicelocal1] = 'X';
                if(wincheckp1(board) == 1){
                    std::cout<< "PLAYER1 WINS!" <<std::endl;
                    break;
                }
            }
            charboardout(board);
            std::cout << std::endl;
            choiceboardout();
            std::cout << std::endl;
            choicelocal2 = choicep2();
            if(board[choicelocal2] == 'X' || board[choicelocal2] == 'O'){
                std::cout << "invalid" << std::endl;
            } else {
                board[choicelocal2] = 'O';
                if(wincheckp2(board) == 1){
                    std::cout<< "PLAYER2 WINS!" <<std::endl;
                    break;
                }
            }
            if(wincheckp2(board) == 0 && wincheckp1(board) == 0 && fillcheck(board) == 1){
                    std::cout<< "Tie!" <<std::endl;
                    break;
        }
    }
}


int main(){
    playtictactoe();
    return 0;
}
